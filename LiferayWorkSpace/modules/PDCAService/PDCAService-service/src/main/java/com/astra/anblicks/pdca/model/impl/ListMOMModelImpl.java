/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.astra.anblicks.pdca.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.astra.anblicks.pdca.model.ListMOM;
import com.astra.anblicks.pdca.model.ListMOMModel;
import com.astra.anblicks.pdca.model.ListMOMSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the ListMOM service. Represents a row in the &quot;pdca_listmom&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ListMOMModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ListMOMImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ListMOMImpl
 * @see ListMOM
 * @see ListMOMModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class ListMOMModelImpl extends BaseModelImpl<ListMOM>
	implements ListMOMModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a list mom model instance should use the {@link ListMOM} interface instead.
	 */
	public static final String TABLE_NAME = "pdca_listmom";
	public static final Object[][] TABLE_COLUMNS = {
			{ "MomId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "meetingDate", Types.VARCHAR },
			{ "fromTime", Types.VARCHAR },
			{ "ampm", Types.VARCHAR },
			{ "MomType", Types.VARCHAR },
			{ "MomTypeId", Types.VARCHAR },
			{ "performance", Types.VARCHAR },
			{ "MOMGroup", Types.VARCHAR },
			{ "MOMparticipants", Types.VARCHAR },
			{ "MOMcompanyName", Types.VARCHAR },
			{ "MOMplace", Types.VARCHAR },
			{ "ponitDiscussionId", Types.BIGINT },
			{ "SiteId", Types.BIGINT },
			{ "CreateDate", Types.TIMESTAMP },
			{ "CreatedBy", Types.VARCHAR },
			{ "ModifiedDate", Types.TIMESTAMP },
			{ "ModifiedBy", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("MomId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("meetingDate", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fromTime", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ampm", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MomType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MomTypeId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("performance", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MOMGroup", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MOMparticipants", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MOMcompanyName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MOMplace", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ponitDiscussionId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("SiteId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("CreateDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CreatedBy", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ModifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ModifiedBy", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table pdca_listmom (MomId LONG not null primary key,userId LONG,companyId LONG,meetingDate VARCHAR(75) null,fromTime VARCHAR(75) null,ampm VARCHAR(75) null,MomType VARCHAR(75) null,MomTypeId VARCHAR(75) null,performance VARCHAR(75) null,MOMGroup VARCHAR(75) null,MOMparticipants VARCHAR(75) null,MOMcompanyName VARCHAR(75) null,MOMplace VARCHAR(75) null,ponitDiscussionId LONG,SiteId LONG,CreateDate DATE null,CreatedBy VARCHAR(75) null,ModifiedDate DATE null,ModifiedBy VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table pdca_listmom";
	public static final String ORDER_BY_JPQL = " ORDER BY listMOM.MomId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY pdca_listmom.MomId ASC";
	public static final String DATA_SOURCE = "pdcaSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.astra.anblicks.pdca.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.astra.anblicks.pdca.model.ListMOM"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.astra.anblicks.pdca.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.astra.anblicks.pdca.model.ListMOM"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ListMOM toModel(ListMOMSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ListMOM model = new ListMOMImpl();

		model.setMomId(soapModel.getMomId());
		model.setUserId(soapModel.getUserId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setMeetingDate(soapModel.getMeetingDate());
		model.setFromTime(soapModel.getFromTime());
		model.setAmpm(soapModel.getAmpm());
		model.setMomType(soapModel.getMomType());
		model.setMomTypeId(soapModel.getMomTypeId());
		model.setPerformance(soapModel.getPerformance());
		model.setMOMGroup(soapModel.getMOMGroup());
		model.setMOMparticipants(soapModel.getMOMparticipants());
		model.setMOMcompanyName(soapModel.getMOMcompanyName());
		model.setMOMplace(soapModel.getMOMplace());
		model.setPonitDiscussionId(soapModel.getPonitDiscussionId());
		model.setSiteId(soapModel.getSiteId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setCreatedBy(soapModel.getCreatedBy());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setModifiedBy(soapModel.getModifiedBy());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ListMOM> toModels(ListMOMSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<ListMOM> models = new ArrayList<ListMOM>(soapModels.length);

		for (ListMOMSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.astra.anblicks.pdca.service.util.ServiceProps.get(
				"lock.expiration.time.com.astra.anblicks.pdca.model.ListMOM"));

	public ListMOMModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _MomId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setMomId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _MomId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ListMOM.class;
	}

	@Override
	public String getModelClassName() {
		return ListMOM.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("MomId", getMomId());
		attributes.put("userId", getUserId());
		attributes.put("companyId", getCompanyId());
		attributes.put("meetingDate", getMeetingDate());
		attributes.put("fromTime", getFromTime());
		attributes.put("ampm", getAmpm());
		attributes.put("MomType", getMomType());
		attributes.put("MomTypeId", getMomTypeId());
		attributes.put("performance", getPerformance());
		attributes.put("MOMGroup", getMOMGroup());
		attributes.put("MOMparticipants", getMOMparticipants());
		attributes.put("MOMcompanyName", getMOMcompanyName());
		attributes.put("MOMplace", getMOMplace());
		attributes.put("ponitDiscussionId", getPonitDiscussionId());
		attributes.put("SiteId", getSiteId());
		attributes.put("CreateDate", getCreateDate());
		attributes.put("CreatedBy", getCreatedBy());
		attributes.put("ModifiedDate", getModifiedDate());
		attributes.put("ModifiedBy", getModifiedBy());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long MomId = (Long)attributes.get("MomId");

		if (MomId != null) {
			setMomId(MomId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		String meetingDate = (String)attributes.get("meetingDate");

		if (meetingDate != null) {
			setMeetingDate(meetingDate);
		}

		String fromTime = (String)attributes.get("fromTime");

		if (fromTime != null) {
			setFromTime(fromTime);
		}

		String ampm = (String)attributes.get("ampm");

		if (ampm != null) {
			setAmpm(ampm);
		}

		String MomType = (String)attributes.get("MomType");

		if (MomType != null) {
			setMomType(MomType);
		}

		String MomTypeId = (String)attributes.get("MomTypeId");

		if (MomTypeId != null) {
			setMomTypeId(MomTypeId);
		}

		String performance = (String)attributes.get("performance");

		if (performance != null) {
			setPerformance(performance);
		}

		String MOMGroup = (String)attributes.get("MOMGroup");

		if (MOMGroup != null) {
			setMOMGroup(MOMGroup);
		}

		String MOMparticipants = (String)attributes.get("MOMparticipants");

		if (MOMparticipants != null) {
			setMOMparticipants(MOMparticipants);
		}

		String MOMcompanyName = (String)attributes.get("MOMcompanyName");

		if (MOMcompanyName != null) {
			setMOMcompanyName(MOMcompanyName);
		}

		String MOMplace = (String)attributes.get("MOMplace");

		if (MOMplace != null) {
			setMOMplace(MOMplace);
		}

		Long ponitDiscussionId = (Long)attributes.get("ponitDiscussionId");

		if (ponitDiscussionId != null) {
			setPonitDiscussionId(ponitDiscussionId);
		}

		Long SiteId = (Long)attributes.get("SiteId");

		if (SiteId != null) {
			setSiteId(SiteId);
		}

		Date CreateDate = (Date)attributes.get("CreateDate");

		if (CreateDate != null) {
			setCreateDate(CreateDate);
		}

		String CreatedBy = (String)attributes.get("CreatedBy");

		if (CreatedBy != null) {
			setCreatedBy(CreatedBy);
		}

		Date ModifiedDate = (Date)attributes.get("ModifiedDate");

		if (ModifiedDate != null) {
			setModifiedDate(ModifiedDate);
		}

		String ModifiedBy = (String)attributes.get("ModifiedBy");

		if (ModifiedBy != null) {
			setModifiedBy(ModifiedBy);
		}
	}

	@JSON
	@Override
	public long getMomId() {
		return _MomId;
	}

	@Override
	public void setMomId(long MomId) {
		_MomId = MomId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public String getMeetingDate() {
		if (_meetingDate == null) {
			return StringPool.BLANK;
		}
		else {
			return _meetingDate;
		}
	}

	@Override
	public void setMeetingDate(String meetingDate) {
		_meetingDate = meetingDate;
	}

	@JSON
	@Override
	public String getFromTime() {
		if (_fromTime == null) {
			return StringPool.BLANK;
		}
		else {
			return _fromTime;
		}
	}

	@Override
	public void setFromTime(String fromTime) {
		_fromTime = fromTime;
	}

	@JSON
	@Override
	public String getAmpm() {
		if (_ampm == null) {
			return StringPool.BLANK;
		}
		else {
			return _ampm;
		}
	}

	@Override
	public void setAmpm(String ampm) {
		_ampm = ampm;
	}

	@JSON
	@Override
	public String getMomType() {
		if (_MomType == null) {
			return StringPool.BLANK;
		}
		else {
			return _MomType;
		}
	}

	@Override
	public void setMomType(String MomType) {
		_MomType = MomType;
	}

	@JSON
	@Override
	public String getMomTypeId() {
		if (_MomTypeId == null) {
			return StringPool.BLANK;
		}
		else {
			return _MomTypeId;
		}
	}

	@Override
	public void setMomTypeId(String MomTypeId) {
		_MomTypeId = MomTypeId;
	}

	@JSON
	@Override
	public String getPerformance() {
		if (_performance == null) {
			return StringPool.BLANK;
		}
		else {
			return _performance;
		}
	}

	@Override
	public void setPerformance(String performance) {
		_performance = performance;
	}

	@JSON
	@Override
	public String getMOMGroup() {
		if (_MOMGroup == null) {
			return StringPool.BLANK;
		}
		else {
			return _MOMGroup;
		}
	}

	@Override
	public void setMOMGroup(String MOMGroup) {
		_MOMGroup = MOMGroup;
	}

	@JSON
	@Override
	public String getMOMparticipants() {
		if (_MOMparticipants == null) {
			return StringPool.BLANK;
		}
		else {
			return _MOMparticipants;
		}
	}

	@Override
	public void setMOMparticipants(String MOMparticipants) {
		_MOMparticipants = MOMparticipants;
	}

	@JSON
	@Override
	public String getMOMcompanyName() {
		if (_MOMcompanyName == null) {
			return StringPool.BLANK;
		}
		else {
			return _MOMcompanyName;
		}
	}

	@Override
	public void setMOMcompanyName(String MOMcompanyName) {
		_MOMcompanyName = MOMcompanyName;
	}

	@JSON
	@Override
	public String getMOMplace() {
		if (_MOMplace == null) {
			return StringPool.BLANK;
		}
		else {
			return _MOMplace;
		}
	}

	@Override
	public void setMOMplace(String MOMplace) {
		_MOMplace = MOMplace;
	}

	@JSON
	@Override
	public long getPonitDiscussionId() {
		return _ponitDiscussionId;
	}

	@Override
	public void setPonitDiscussionId(long ponitDiscussionId) {
		_ponitDiscussionId = ponitDiscussionId;
	}

	@JSON
	@Override
	public long getSiteId() {
		return _SiteId;
	}

	@Override
	public void setSiteId(long SiteId) {
		_SiteId = SiteId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _CreateDate;
	}

	@Override
	public void setCreateDate(Date CreateDate) {
		_CreateDate = CreateDate;
	}

	@JSON
	@Override
	public String getCreatedBy() {
		if (_CreatedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _CreatedBy;
		}
	}

	@Override
	public void setCreatedBy(String CreatedBy) {
		_CreatedBy = CreatedBy;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _ModifiedDate;
	}

	@Override
	public void setModifiedDate(Date ModifiedDate) {
		_ModifiedDate = ModifiedDate;
	}

	@JSON
	@Override
	public String getModifiedBy() {
		if (_ModifiedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _ModifiedBy;
		}
	}

	@Override
	public void setModifiedBy(String ModifiedBy) {
		_ModifiedBy = ModifiedBy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ListMOM.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ListMOM toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ListMOM)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ListMOMImpl listMOMImpl = new ListMOMImpl();

		listMOMImpl.setMomId(getMomId());
		listMOMImpl.setUserId(getUserId());
		listMOMImpl.setCompanyId(getCompanyId());
		listMOMImpl.setMeetingDate(getMeetingDate());
		listMOMImpl.setFromTime(getFromTime());
		listMOMImpl.setAmpm(getAmpm());
		listMOMImpl.setMomType(getMomType());
		listMOMImpl.setMomTypeId(getMomTypeId());
		listMOMImpl.setPerformance(getPerformance());
		listMOMImpl.setMOMGroup(getMOMGroup());
		listMOMImpl.setMOMparticipants(getMOMparticipants());
		listMOMImpl.setMOMcompanyName(getMOMcompanyName());
		listMOMImpl.setMOMplace(getMOMplace());
		listMOMImpl.setPonitDiscussionId(getPonitDiscussionId());
		listMOMImpl.setSiteId(getSiteId());
		listMOMImpl.setCreateDate(getCreateDate());
		listMOMImpl.setCreatedBy(getCreatedBy());
		listMOMImpl.setModifiedDate(getModifiedDate());
		listMOMImpl.setModifiedBy(getModifiedBy());

		listMOMImpl.resetOriginalValues();

		return listMOMImpl;
	}

	@Override
	public int compareTo(ListMOM listMOM) {
		long primaryKey = listMOM.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ListMOM)) {
			return false;
		}

		ListMOM listMOM = (ListMOM)obj;

		long primaryKey = listMOM.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<ListMOM> toCacheModel() {
		ListMOMCacheModel listMOMCacheModel = new ListMOMCacheModel();

		listMOMCacheModel.MomId = getMomId();

		listMOMCacheModel.userId = getUserId();

		listMOMCacheModel.companyId = getCompanyId();

		listMOMCacheModel.meetingDate = getMeetingDate();

		String meetingDate = listMOMCacheModel.meetingDate;

		if ((meetingDate != null) && (meetingDate.length() == 0)) {
			listMOMCacheModel.meetingDate = null;
		}

		listMOMCacheModel.fromTime = getFromTime();

		String fromTime = listMOMCacheModel.fromTime;

		if ((fromTime != null) && (fromTime.length() == 0)) {
			listMOMCacheModel.fromTime = null;
		}

		listMOMCacheModel.ampm = getAmpm();

		String ampm = listMOMCacheModel.ampm;

		if ((ampm != null) && (ampm.length() == 0)) {
			listMOMCacheModel.ampm = null;
		}

		listMOMCacheModel.MomType = getMomType();

		String MomType = listMOMCacheModel.MomType;

		if ((MomType != null) && (MomType.length() == 0)) {
			listMOMCacheModel.MomType = null;
		}

		listMOMCacheModel.MomTypeId = getMomTypeId();

		String MomTypeId = listMOMCacheModel.MomTypeId;

		if ((MomTypeId != null) && (MomTypeId.length() == 0)) {
			listMOMCacheModel.MomTypeId = null;
		}

		listMOMCacheModel.performance = getPerformance();

		String performance = listMOMCacheModel.performance;

		if ((performance != null) && (performance.length() == 0)) {
			listMOMCacheModel.performance = null;
		}

		listMOMCacheModel.MOMGroup = getMOMGroup();

		String MOMGroup = listMOMCacheModel.MOMGroup;

		if ((MOMGroup != null) && (MOMGroup.length() == 0)) {
			listMOMCacheModel.MOMGroup = null;
		}

		listMOMCacheModel.MOMparticipants = getMOMparticipants();

		String MOMparticipants = listMOMCacheModel.MOMparticipants;

		if ((MOMparticipants != null) && (MOMparticipants.length() == 0)) {
			listMOMCacheModel.MOMparticipants = null;
		}

		listMOMCacheModel.MOMcompanyName = getMOMcompanyName();

		String MOMcompanyName = listMOMCacheModel.MOMcompanyName;

		if ((MOMcompanyName != null) && (MOMcompanyName.length() == 0)) {
			listMOMCacheModel.MOMcompanyName = null;
		}

		listMOMCacheModel.MOMplace = getMOMplace();

		String MOMplace = listMOMCacheModel.MOMplace;

		if ((MOMplace != null) && (MOMplace.length() == 0)) {
			listMOMCacheModel.MOMplace = null;
		}

		listMOMCacheModel.ponitDiscussionId = getPonitDiscussionId();

		listMOMCacheModel.SiteId = getSiteId();

		Date CreateDate = getCreateDate();

		if (CreateDate != null) {
			listMOMCacheModel.CreateDate = CreateDate.getTime();
		}
		else {
			listMOMCacheModel.CreateDate = Long.MIN_VALUE;
		}

		listMOMCacheModel.CreatedBy = getCreatedBy();

		String CreatedBy = listMOMCacheModel.CreatedBy;

		if ((CreatedBy != null) && (CreatedBy.length() == 0)) {
			listMOMCacheModel.CreatedBy = null;
		}

		Date ModifiedDate = getModifiedDate();

		if (ModifiedDate != null) {
			listMOMCacheModel.ModifiedDate = ModifiedDate.getTime();
		}
		else {
			listMOMCacheModel.ModifiedDate = Long.MIN_VALUE;
		}

		listMOMCacheModel.ModifiedBy = getModifiedBy();

		String ModifiedBy = listMOMCacheModel.ModifiedBy;

		if ((ModifiedBy != null) && (ModifiedBy.length() == 0)) {
			listMOMCacheModel.ModifiedBy = null;
		}

		return listMOMCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(39);

		sb.append("{MomId=");
		sb.append(getMomId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", meetingDate=");
		sb.append(getMeetingDate());
		sb.append(", fromTime=");
		sb.append(getFromTime());
		sb.append(", ampm=");
		sb.append(getAmpm());
		sb.append(", MomType=");
		sb.append(getMomType());
		sb.append(", MomTypeId=");
		sb.append(getMomTypeId());
		sb.append(", performance=");
		sb.append(getPerformance());
		sb.append(", MOMGroup=");
		sb.append(getMOMGroup());
		sb.append(", MOMparticipants=");
		sb.append(getMOMparticipants());
		sb.append(", MOMcompanyName=");
		sb.append(getMOMcompanyName());
		sb.append(", MOMplace=");
		sb.append(getMOMplace());
		sb.append(", ponitDiscussionId=");
		sb.append(getPonitDiscussionId());
		sb.append(", SiteId=");
		sb.append(getSiteId());
		sb.append(", CreateDate=");
		sb.append(getCreateDate());
		sb.append(", CreatedBy=");
		sb.append(getCreatedBy());
		sb.append(", ModifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", ModifiedBy=");
		sb.append(getModifiedBy());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(61);

		sb.append("<model><model-name>");
		sb.append("com.astra.anblicks.pdca.model.ListMOM");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>MomId</column-name><column-value><![CDATA[");
		sb.append(getMomId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>meetingDate</column-name><column-value><![CDATA[");
		sb.append(getMeetingDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fromTime</column-name><column-value><![CDATA[");
		sb.append(getFromTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ampm</column-name><column-value><![CDATA[");
		sb.append(getAmpm());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MomType</column-name><column-value><![CDATA[");
		sb.append(getMomType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MomTypeId</column-name><column-value><![CDATA[");
		sb.append(getMomTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>performance</column-name><column-value><![CDATA[");
		sb.append(getPerformance());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MOMGroup</column-name><column-value><![CDATA[");
		sb.append(getMOMGroup());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MOMparticipants</column-name><column-value><![CDATA[");
		sb.append(getMOMparticipants());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MOMcompanyName</column-name><column-value><![CDATA[");
		sb.append(getMOMcompanyName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MOMplace</column-name><column-value><![CDATA[");
		sb.append(getMOMplace());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ponitDiscussionId</column-name><column-value><![CDATA[");
		sb.append(getPonitDiscussionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SiteId</column-name><column-value><![CDATA[");
		sb.append(getSiteId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CreateDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CreatedBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ModifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ModifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = ListMOM.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			ListMOM.class
		};
	private long _MomId;
	private long _userId;
	private long _companyId;
	private String _meetingDate;
	private String _fromTime;
	private String _ampm;
	private String _MomType;
	private String _MomTypeId;
	private String _performance;
	private String _MOMGroup;
	private String _MOMparticipants;
	private String _MOMcompanyName;
	private String _MOMplace;
	private long _ponitDiscussionId;
	private long _SiteId;
	private Date _CreateDate;
	private String _CreatedBy;
	private Date _ModifiedDate;
	private String _ModifiedBy;
	private ListMOM _escapedModel;
}