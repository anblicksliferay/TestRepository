/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.astra.anblicks.pdca.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

/**
 * The base model interface for the tradingProfit service. Represents a row in the &quot;pdca_tradingprofit&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.astra.anblicks.pdca.model.impl.tradingProfitModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.astra.anblicks.pdca.model.impl.tradingProfitImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see tradingProfit
 * @see com.astra.anblicks.pdca.model.impl.tradingProfitImpl
 * @see com.astra.anblicks.pdca.model.impl.tradingProfitModelImpl
 * @generated
 */
@ProviderType
public interface tradingProfitModel extends BaseModel<tradingProfit>,
	ShardedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a trading profit model instance should use the {@link tradingProfit} interface instead.
	 */

	/**
	 * Returns the primary key of this trading profit.
	 *
	 * @return the primary key of this trading profit
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this trading profit.
	 *
	 * @param primaryKey the primary key of this trading profit
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this trading profit.
	 *
	 * @return the uuid of this trading profit
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this trading profit.
	 *
	 * @param uuid the uuid of this trading profit
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the trading profit ID of this trading profit.
	 *
	 * @return the trading profit ID of this trading profit
	 */
	public long getTradingProfitId();

	/**
	 * Sets the trading profit ID of this trading profit.
	 *
	 * @param tradingProfitId the trading profit ID of this trading profit
	 */
	public void setTradingProfitId(long tradingProfitId);

	/**
	 * Returns the period ID of this trading profit.
	 *
	 * @return the period ID of this trading profit
	 */
	public long getPeriodId();

	/**
	 * Sets the period ID of this trading profit.
	 *
	 * @param periodId the period ID of this trading profit
	 */
	public void setPeriodId(long periodId);

	/**
	 * Returns the company ID of this trading profit.
	 *
	 * @return the company ID of this trading profit
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this trading profit.
	 *
	 * @param companyId the company ID of this trading profit
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the year of this trading profit.
	 *
	 * @return the year of this trading profit
	 */
	public long getYear();

	/**
	 * Sets the year of this trading profit.
	 *
	 * @param year the year of this trading profit
	 */
	public void setYear(long year);

	/**
	 * Returns the npat of this trading profit.
	 *
	 * @return the npat of this trading profit
	 */
	public double getNpat();

	/**
	 * Sets the npat of this trading profit.
	 *
	 * @param npat the npat of this trading profit
	 */
	public void setNpat(double npat);

	/**
	 * Returns the net forex of this trading profit.
	 *
	 * @return the net forex of this trading profit
	 */
	public double getNetForex();

	/**
	 * Sets the net forex of this trading profit.
	 *
	 * @param netForex the net forex of this trading profit
	 */
	public void setNetForex(double netForex);

	/**
	 * Returns the ppe dispos of this trading profit.
	 *
	 * @return the ppe dispos of this trading profit
	 */
	public double getPpeDispos();

	/**
	 * Sets the ppe dispos of this trading profit.
	 *
	 * @param ppeDispos the ppe dispos of this trading profit
	 */
	public void setPpeDispos(double ppeDispos);

	/**
	 * Returns the revalution on property investment of this trading profit.
	 *
	 * @return the revalution on property investment of this trading profit
	 */
	public double getRevalutionOnPropertyInvestment();

	/**
	 * Sets the revalution on property investment of this trading profit.
	 *
	 * @param revalutionOnPropertyInvestment the revalution on property investment of this trading profit
	 */
	public void setRevalutionOnPropertyInvestment(
		double revalutionOnPropertyInvestment);

	/**
	 * Returns the investment of this trading profit.
	 *
	 * @return the investment of this trading profit
	 */
	public double getInvestment();

	/**
	 * Sets the investment of this trading profit.
	 *
	 * @param investment the investment of this trading profit
	 */
	public void setInvestment(double investment);

	/**
	 * Returns the tax expense of this trading profit.
	 *
	 * @return the tax expense of this trading profit
	 */
	public double getTaxExpense();

	/**
	 * Sets the tax expense of this trading profit.
	 *
	 * @param taxExpense the tax expense of this trading profit
	 */
	public void setTaxExpense(double taxExpense);

	/**
	 * Returns the impairment on asset of this trading profit.
	 *
	 * @return the impairment on asset of this trading profit
	 */
	public double getImpairmentOnAsset();

	/**
	 * Sets the impairment on asset of this trading profit.
	 *
	 * @param impairmentOnAsset the impairment on asset of this trading profit
	 */
	public void setImpairmentOnAsset(double impairmentOnAsset);

	/**
	 * Returns the others of this trading profit.
	 *
	 * @return the others of this trading profit
	 */
	public double getOthers();

	/**
	 * Sets the others of this trading profit.
	 *
	 * @param others the others of this trading profit
	 */
	public void setOthers(double others);

	/**
	 * Returns the total sum of this trading profit.
	 *
	 * @return the total sum of this trading profit
	 */
	public double getTotalSum();

	/**
	 * Sets the total sum of this trading profit.
	 *
	 * @param TotalSum the total sum of this trading profit
	 */
	public void setTotalSum(double TotalSum);

	/**
	 * Returns the notes_ npat of this trading profit.
	 *
	 * @return the notes_ npat of this trading profit
	 */
	@AutoEscape
	public String getNotes_Npat();

	/**
	 * Sets the notes_ npat of this trading profit.
	 *
	 * @param notes_Npat the notes_ npat of this trading profit
	 */
	public void setNotes_Npat(String notes_Npat);

	/**
	 * Returns the notes_ net forex of this trading profit.
	 *
	 * @return the notes_ net forex of this trading profit
	 */
	@AutoEscape
	public String getNotes_NetForex();

	/**
	 * Sets the notes_ net forex of this trading profit.
	 *
	 * @param notes_NetForex the notes_ net forex of this trading profit
	 */
	public void setNotes_NetForex(String notes_NetForex);

	/**
	 * Returns the notes_ppe dispos of this trading profit.
	 *
	 * @return the notes_ppe dispos of this trading profit
	 */
	@AutoEscape
	public String getNotes_ppeDispos();

	/**
	 * Sets the notes_ppe dispos of this trading profit.
	 *
	 * @param notes_ppeDispos the notes_ppe dispos of this trading profit
	 */
	public void setNotes_ppeDispos(String notes_ppeDispos);

	/**
	 * Returns the notes_ revalutionon pi of this trading profit.
	 *
	 * @return the notes_ revalutionon pi of this trading profit
	 */
	@AutoEscape
	public String getNotes_RevalutiononPI();

	/**
	 * Sets the notes_ revalutionon pi of this trading profit.
	 *
	 * @param notes_RevalutiononPI the notes_ revalutionon pi of this trading profit
	 */
	public void setNotes_RevalutiononPI(String notes_RevalutiononPI);

	/**
	 * Returns the notes_ investment of this trading profit.
	 *
	 * @return the notes_ investment of this trading profit
	 */
	@AutoEscape
	public String getNotes_Investment();

	/**
	 * Sets the notes_ investment of this trading profit.
	 *
	 * @param notes_Investment the notes_ investment of this trading profit
	 */
	public void setNotes_Investment(String notes_Investment);

	/**
	 * Returns the notes_tax expenses of this trading profit.
	 *
	 * @return the notes_tax expenses of this trading profit
	 */
	@AutoEscape
	public String getNotes_taxExpenses();

	/**
	 * Sets the notes_tax expenses of this trading profit.
	 *
	 * @param notes_taxExpenses the notes_tax expenses of this trading profit
	 */
	public void setNotes_taxExpenses(String notes_taxExpenses);

	/**
	 * Returns the notes_impartment on asset of this trading profit.
	 *
	 * @return the notes_impartment on asset of this trading profit
	 */
	@AutoEscape
	public String getNotes_impartmentOnAsset();

	/**
	 * Sets the notes_impartment on asset of this trading profit.
	 *
	 * @param notes_impartmentOnAsset the notes_impartment on asset of this trading profit
	 */
	public void setNotes_impartmentOnAsset(String notes_impartmentOnAsset);

	/**
	 * Returns the notes_others of this trading profit.
	 *
	 * @return the notes_others of this trading profit
	 */
	@AutoEscape
	public String getNotes_others();

	/**
	 * Sets the notes_others of this trading profit.
	 *
	 * @param notes_others the notes_others of this trading profit
	 */
	public void setNotes_others(String notes_others);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		com.astra.anblicks.pdca.model.tradingProfit tradingProfit);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.astra.anblicks.pdca.model.tradingProfit> toCacheModel();

	@Override
	public com.astra.anblicks.pdca.model.tradingProfit toEscapedModel();

	@Override
	public com.astra.anblicks.pdca.model.tradingProfit toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}